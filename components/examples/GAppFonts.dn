component provides App requires ui.IOLayer coreui, ui.Window, ui.Label, io.Output out {
	
	Window window
	
	eventsink Events(EventData ed)
		{
		if (ed.source === coreui && ed.type == IOLayer.[ready])
			{
			startApp()
			}
			else if (ed.source === window)
			{
			window.close()
			coreui.shutdown()
			}
		}
	
	void startApp()
		{
		window = new Window("Font test")
		window.setSize(600, 200)
		window.setVisible(true)
		
		Label label1 = new Label("Default Dana system font.", "SourceSansPro.ttf", 18)
		Label label2 = new Label("Default Dana system font (monospaced).", "LiberationMono.ttf", 18)
		
		label1.setPosition(10, 40)
		label2.setPosition(10, 80)
		
		window.addObject(label1)
		window.addObject(label2)
		
		sinkevent Events(window)
		}
	
	int App:main(AppParam params[])
		{
		//initialise the system-level UI framework
		coreui.init()

		//listen for startup events from the system
		sinkevent Events(coreui)

		//run the core system loop, which blocks until the last window is closed
		coreui.run()
		
		return 0
		}
	
	}