component provides Button(AdaptEvents) requires io.Output out, data.IntUtil iu, Font, os.SystemInfo sysInfo {
	
	Font labelFont
	
	Button:Button(char myLabel[])
		{
		text = myLabel
		labelFont = new Font(sysInfo.getSystemFont(false), 15)
		}
	
	void AdaptEvents:active()
		{
		labelFont = new Font(sysInfo.getSystemFont(false), 15)
		}
	
	void Button:setPosition(int x, int y)
		{
		xPosition = x
		yPosition = y
		}
	
	void Button:setPanel(Panel p)
		{
		myPanel = p
		myPanel.addClickTarget(this)
		}
	
	void Button:paint(Canvas c)
		{
		c.drawRect(new Rect2D(xPosition+1, yPosition+1, 40, 20, new Color(150, 140, 140, 255)))
		c.drawRect(new Rect2D(xPosition, yPosition, 40, 20, new Color(220, 188, 157, 255)))
		c.drawText(new Point2D(xPosition+3, yPosition+1, new Color(0, 0, 0, 255)), labelFont, text)
		}
	
	void Button:click(int x, int y, int button)
		{
		if (button == MouseButtons.BUTTON_LEFT)
			{
			for (int i = 0; i < listeners.arrayLength; i++)
				{
				listeners[i].click(this)
				}
			}
		}
	
	void Button:addClickListener(ClickListener cl)
		{
		listeners = new ClickListener[](listeners, cl)
		}
	
	void Button:remClickListener(ClickListener cl)
		{
		ClickListener nl[] = new ClickListener[listeners.arrayLength - 1]
		int j = 0
		for (int i = 0; i < listeners.arrayLength; i++)
			{
			ClickListener q = listeners[i]
			
			if (q !== cl)
				{
				nl[j] = listeners[i]
				j ++
				}
			}
		listeners = nl
		}
	
	void Button:setText(char t[])
		{
		text = t
		}
	
	char[] Button:getText()
		{
		return text
		}
	
	Rect Button:getBounds()
		{
		return new Rect(xPosition, yPosition, 40, 20)
		}
	
	WH Button:getPreferredSize()
		{
		return new WH(40, 20)
		}
	
	Point Button:getPosition()
		{
		return new Point(xPosition, yPosition)
		}
	
	ClickListenerItem[] Button:getClickListeners()
		{
		ClickListenerItem lst[] = new ClickListenerItem[listeners.arrayLength]
		for (int i = 0; i < lst.arrayLength; i++)
			{
			lst[i] = new ClickListenerItem(listeners[i])
			}
		
		return lst
		}
	
	Panel Button:getPanel()
		{
		return myPanel
		}
	
	
	bool Button:equals(Object o)
		{
		Button bq = o
		
		return text == bq.getText()
		}
	
	void AdaptEvents:destroy()
		{
		myPanel.repaint()
		}
	}